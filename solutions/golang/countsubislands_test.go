package golang

import "testing"

func TestCountSubIslands(t *testing.T) {
	t.Parallel()

	type args struct {
		grid1 [][]int
		grid2 [][]int
	}

	tests := []struct {
		name string
		args args
		want int
	}{
		{
			name: "smoke 1",
			args: args{
				grid1: [][]int{{1, 1, 1, 0, 0}, {0, 1, 1, 1, 1}, {0, 0, 0, 0, 0}, {1, 0, 0, 0, 0}, {1, 1, 0, 1, 1}},
				grid2: [][]int{{1, 1, 1, 0, 0}, {0, 0, 1, 1, 1}, {0, 1, 0, 0, 0}, {1, 0, 1, 1, 0}, {0, 1, 0, 1, 0}},
			},
			want: 3,
		},
		{
			name: "smoke 2",
			args: args{
				grid1: [][]int{{1, 0, 1, 0, 1}, {1, 1, 1, 1, 1}, {0, 0, 0, 0, 0}, {1, 1, 1, 1, 1}, {1, 0, 1, 0, 1}},
				grid2: [][]int{{0, 0, 0, 0, 0}, {1, 1, 1, 1, 1}, {0, 1, 0, 1, 0}, {0, 1, 0, 1, 0}, {1, 0, 0, 0, 1}},
			},
			want: 2,
		},
		{
			name: "test 2: runtime",
			args: args{
				grid1: [][]int{
					{1, 1, 1, 1, 0, 0},
					{1, 1, 0, 1, 0, 0},
					{1, 0, 0, 1, 1, 1},
					{1, 1, 1, 0, 0, 1},
					{1, 1, 1, 1, 1, 0},
					{1, 0, 1, 0, 1, 0},
					{0, 1, 1, 1, 0, 1},
					{1, 0, 0, 0, 1, 1},
					{1, 0, 0, 0, 1, 0},
					{1, 1, 1, 1, 1, 0},
				},
				grid2: [][]int{
					{1, 1, 1, 1, 0, 1},
					{0, 0, 1, 0, 1, 0},
					{1, 1, 1, 1, 1, 1},
					{0, 1, 1, 1, 1, 1},
					{1, 1, 1, 0, 1, 0},
					{0, 1, 1, 1, 1, 1},
					{1, 1, 0, 1, 1, 1},
					{1, 0, 0, 1, 0, 1},
					{1, 1, 1, 1, 1, 1},
					{1, 0, 0, 1, 0, 0},
				},
			},
			want: 0,
		},
		{
			name: "test 9: wrong answer",
			args: args{
				grid1: [][]int{
					{1, 1, 1, 1, 0, 0},
					{1, 1, 0, 1, 0, 0},
					{1, 0, 0, 1, 1, 1},
					{1, 1, 1, 0, 0, 1},
					{1, 1, 1, 1, 1, 0},
					{1, 0, 1, 0, 1, 0},
					{0, 1, 1, 1, 0, 1},
					{1, 0, 0, 0, 1, 1},
					{1, 0, 0, 0, 1, 0},
					{1, 1, 1, 1, 1, 0},
				},
				grid2: [][]int{
					{1, 1, 1, 1, 0, 1},
					{0, 0, 1, 0, 1, 0},
					{1, 1, 1, 1, 1, 1},
					{0, 1, 1, 1, 1, 1},
					{1, 1, 1, 0, 1, 0},
					{0, 1, 1, 1, 1, 1},
					{1, 1, 0, 1, 1, 1},
					{1, 0, 0, 1, 0, 1},
					{1, 1, 1, 1, 1, 1},
					{1, 0, 0, 1, 0, 0},
				},
			},
			want: 0,
		},
	}

	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			t.Parallel()

			if got := countSubIslands(test.args.grid1, test.args.grid2); got != test.want {
				t.Errorf("countSubIslands() = %v, want = %v", got, test.want)
			}
		})
	}
}
