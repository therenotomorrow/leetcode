import collections
import io

import pytest

from .solution import Point, first_star, second_star

_example = """
............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
"""
_input = """
..................................................
.......................w..........................
..A................G..............................
......o...........O..G............................
................s.....w...........................
..........R.............w.........................
.Ro......Z...........w..............9.............
.....o..........G..Z.....R........................
..R..........A.....o..3...........................
A...........sO....6.......9.......................
.........V.............s.9......c.................
..........Z......s........r..a...9..j.............
.......................................c..........
..................................c..U......q.....
.........O.........r.................6...U...X....
.............n....................................
..................Z...r.......................X...
.......................................v..........
.................................j..7...6....a....
.........c.......................r.............X..
.......n...........................J..j..F........
.................................t.6J...........g.
......O...n.......................................
............................................X.a...
................5........T......U.........1......b
..........................vj............1........J
........................V.p.......J......B....g...
.........................4..V....................3
..............N..............W.....1..8...b.aQ....
..................n....V...........Q....b2........
....G.P.............z.......v8..t...T..........g..
...........................0...T..................
.........................v.....................3..
......................zf...............b.C.S......
...........................t..f...................
...5....0M.......................84.......F7C.....
.........5.........M..................B....N......
..x.5.....................................T.......
..................................Qm.........C....
........................f..............F...g7...N.
.0.........f.........4.......................7..FS
.x.......P........Uq..M...t...Q..........N........
...x.................q..M...........4...m.........
..................P.....................3.........
......x.....0..................z...........2......
......................p...............m.8...W.2.Su
..........q.......................................
..................................................
..........................2..p...............u..C.
.................p...............z.....W..u..1B...
"""

Grid = list[list[str]]
Freq = dict[str, list[Point]]


def parse(indata: str) -> tuple[Grid, Freq]:
    infile = io.StringIO(indata)

    grid = []
    freq = collections.defaultdict(list)

    for row, line in enumerate(filter(bool, map(str.strip, infile))):
        grid.append(list(line))

        for col, _ in enumerate(line):
            if line[col] == '.':
                continue

            freq[line[col]].append(Point(row=row, col=col))

    return grid, freq


class TestDay08:
    @pytest.mark.parametrize(
        'indata, want',
        [(_example, 14), (_input, 313)],
        ids=('example', 'result'),
    )
    def test_first_star(self, indata: str, want: int) -> None:
        grid, freq = parse(indata)

        got = first_star(grid, freq)

        assert got == want, f'first_star() = {got}, want = {want}'

    @pytest.mark.parametrize(
        'indata, want',
        [(_example, 34), (_input, 1064)],
        ids=('example', 'result'),
    )
    def test_second_star(self, indata: str, want: int) -> None:
        grid, freq = parse(indata)

        got = second_star(grid, freq)

        assert got == want, f'second_star() = {got}, want = {want}'
